{"version":3,"sources":["reducer/meme.js","action/index.js","reducer/index.js","component/Meme/Meme.js","component/App.js","index.js"],"names":["meme","state","arguments","length","undefined","action","type","data","RootReducer","combineReducers","Meme","hover","_this2","this","props","react_default","a","createElement","className","onMouseEnter","setState","onMouseLeave","src","url","alt","name","React","Component","App","increament","_this","console","log","id","slice","map","component_Meme_Meme","key","onClick","connect","store","createStore","applyMiddleware","thunk","subscribe","getState","dispatch","fetch","then","res","json","memes","reciveMeme","catch","err","ReactDOM","render","react_redux_es","component_App","document","getElementById"],"mappings":"wOAWeA,EATF,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpC,OAAQC,EAAOC,MACd,ICJsB,WDKrB,OAAOD,EAAOE,KACf,QACC,OAAON,IEJGO,EAAcC,YAAgB,CAC1CT,8CCqBcU,oNApBXT,MAAQ,CACJU,OAAQ,2EAGN,IAAAC,EAAAC,KACAb,EAASa,KAAKC,MAAdd,KAER,OACCe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACFC,aAAc,kBAAKP,EAAKQ,SAAS,CAACT,OAAOC,EAAKX,MAAMU,SACpDU,aAAc,kBAAKT,EAAKQ,SAAS,CAACT,OAAOC,EAAKX,MAAMU,UAEhEI,EAAAC,EAAAC,cAAA,OAAKK,IAAKtB,EAAKuB,IAAKC,IAAKxB,EAAKyB,KAAMP,UAAWL,KAAKZ,MAAMU,MAAQ,sBAAwB,aAE1FI,EAAAC,EAAAC,cAAA,KAAGC,UAAWL,KAAKZ,MAAMU,MAAQ,WAAa,UAAWX,EAAKyB,cAhB/CC,IAAMC,YCCnBC,6MACL3B,MAAQ,CACP4B,WAAY,MAGbA,WAAa,WAAM,IACZA,EAAeC,EAAK7B,MAApB4B,WACNC,EAAKV,SAAS,CACbS,WAAYA,EAAa,8EAGlB,IAAAjB,EAAAC,KAGR,OAFAkB,QAAQC,IAAI,aAAcnB,KAAKC,OAG9BC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,yCAEAF,EAAAC,EAAAC,cAAA,kBACKF,EAAAC,EAAAC,cAAA,SAAOX,KAAK,OAAOmB,KAAK,GAAGQ,GAAG,KADnC,IACyClB,EAAAC,EAAAC,cAAA,WADzC,OAEKF,EAAAC,EAAAC,cAAA,SAAOX,KAAK,OAAOmB,KAAK,GAAGQ,GAAG,MAGlCpB,KAAKC,MAAMd,KAAKkC,MAAM,EAAGrB,KAAKZ,MAAM4B,YAAYM,IAAI,SAAC5B,GAAD,OAAUQ,EAAAC,EAAAC,cAACmB,EAAD,CAAMC,IAAK9B,EAAK0B,GAAIjC,KAAMO,MAEzFQ,EAAAC,EAAAC,cAAA,WACEJ,KAAKC,MAAMd,KAAKG,QAAUU,KAAKC,MAAMd,KAAKG,OAASU,KAAKZ,MAAM4B,WAC9Dd,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaoB,QAAS,kBAAM1B,EAAKiB,eACjD,IADF,gBAKA,YAhCYF,aA4CHY,cAJI,SAACtC,GAAD,MAAY,CAC9BD,KAAMC,EAAMD,OAGsB,KAApBuC,CAA0BX,GCrCnCY,SAAQC,YAAYjC,EAAakC,YAAgBC,OACvDH,EAAMI,UAAU,WACfb,QAAQC,IAAI,sBAAuBQ,EAAMK,cAG1CL,EAAMM,SJCE,SAACA,GAJDC,MADK,qCACMC,KAAK,SAACC,GAAD,OAASA,EAAIC,SAKnBF,KAAK,SAACE,GAAD,OAAUJ,EAhBd,SAACI,GAAS,IACpBC,EAAUD,EAAK3C,KAAf4C,MAER,OADApB,QAAQC,IAAI,iBACL,CACN1B,KANsB,WAOtBC,KAAM4C,GAWkCC,CAAWF,MAAQG,MAAM,SAACC,GAAD,OAASA,MIA5EC,IAASC,OACRzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAUjB,MAAOA,GAChBzB,EAAAC,EAAAC,cAACyC,EAAD,OAEDC,SAASC,eAAe","file":"static/js/main.6f2439f6.chunk.js","sourcesContent":["import { SET_MEME } from '../action';\r\n\r\nconst meme = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_MEME:\r\n\t\t\treturn action.data;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default meme;\r\n","export const SET_MEME = 'SET_MEME';\r\n\r\nconst reciveMeme = (json) => {\r\n\tconst { memes } = json.data;\r\n\tconsole.log('in reciveMeme');\r\n\treturn {\r\n\t\ttype: SET_MEME,\r\n\t\tdata: memes\r\n\t};\r\n};\r\n\r\nconst fetchMemeJSON = () => {\r\n\tconst url = 'https://api.imgflip.com/get_memes';\r\n\treturn fetch(url).then((res) => res.json());\r\n};\r\n\r\nexport const fetchMeme = () => {\r\n\treturn (dispatch) => {\r\n\t\tfetchMemeJSON().then((json) => dispatch(reciveMeme(json))).catch((err) => err);\r\n\t};\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport meme from './meme';\r\n\r\nexport const RootReducer = combineReducers({\r\n\tmeme\r\n});\r\n","import React from 'react';\r\nimport './Meme.css';\r\n\r\nclass Meme extends React.Component {\r\n\r\n    state = {\r\n        hover : false\r\n    }\r\n\r\n\trender() {\r\n\t\tconst { meme } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"meme-item\"\r\n                onMouseEnter={()=> this.setState({hover:!this.state.hover})}\r\n                onMouseLeave={()=> this.setState({hover:!this.state.hover})}\r\n            >\r\n\t\t\t\t<img src={meme.url} alt={meme.name} className={this.state.hover ? 'meme-img darken-img' : 'meme-img'}  />\r\n\r\n\t\t\t\t<p className={this.state.hover ? 'meme-txt' : 'no-txt'}>{meme.name}</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Meme;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Meme from './Meme/Meme';\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tincreament: 10\r\n\t};\r\n\r\n\tincreament = () => {\r\n\t\tlet { increament } = this.state;\r\n\t\tthis.setState({\r\n\t\t\tincreament: increament + 10\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\tconsole.log('this.props', this.props);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h3> Frozen Lwin MemeGenerator </h3>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\tTop <input type=\"text\" name=\"\" id=\"\" /> <br />\r\n\t\t\t\t\tBtn <input type=\"text\" name=\"\" id=\"\" />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{this.props.meme.slice(0, this.state.increament).map((data) => <Meme key={data.id} meme={data} />)}\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{this.props.meme.length && this.props.meme.length > this.state.increament ? (\r\n\t\t\t\t\t\t<button className=\"MemeButton\" onClick={() => this.increament()}>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\tLoad More ..\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapToState = (state) => ({\r\n\tmeme: state.meme\r\n});\r\n\r\nexport default connect(mapToState, null)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { RootReducer } from './reducer';\nimport { fetchMeme } from './action';\n\nimport App from './component/App';\nimport './index.css';\n\nconst store = createStore(RootReducer, applyMiddleware(thunk));\nstore.subscribe(() => {\n\tconsole.log('store.subscribe => ', store.getState());\n});\n\nstore.dispatch(fetchMeme());\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}